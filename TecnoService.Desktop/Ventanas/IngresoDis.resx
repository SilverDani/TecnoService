<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>