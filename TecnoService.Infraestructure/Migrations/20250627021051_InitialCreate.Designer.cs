// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TecnoService.Infraestructure.Data;

#nullable disable

namespace TecnoService.Infraestructure.Migrations
{
    [DbContext(typeof(ServiceContext))]
    [Migration("20250627021051_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TecnoService.Core.Models.Cliente", b =>
                {
                    b.Property<int>("IDCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDCliente"));

                    b.Property<int>("IDPersona")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDCliente");

                    b.HasIndex("IDPersona")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("TecnoService.Core.Models.Dispositivo", b =>
                {
                    b.Property<int>("IDDispositivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDDispositivo"));

                    b.Property<int>("IDMarca")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDDispositivo");

                    b.HasIndex("IDMarca");

                    b.ToTable("Dispositivos");
                });

            modelBuilder.Entity("TecnoService.Core.Models.Factura", b =>
                {
                    b.Property<int>("IDFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDFactura"));

                    b.Property<string>("DetalleArreglo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRetiro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDInDis")
                        .HasColumnType("int");

                    b.Property<int>("IDTrabajador")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IDFactura");

                    b.HasIndex("IDInDis")
                        .IsUnique();

                    b.HasIndex("IDTrabajador");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("TecnoService.Core.Models.InDis", b =>
                {
                    b.Property<int>("IDInDis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDInDis"));

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDCliente")
                        .HasColumnType("int");

                    b.Property<int>("IDDispositivo")
                        .HasColumnType("int");

                    b.HasKey("IDInDis");

                    b.HasIndex("IDCliente");

                    b.HasIndex("IDDispositivo");

                    b.ToTable("Ingreso");
                });

            modelBuilder.Entity("TecnoService.Core.Models.Marca", b =>
                {
                    b.Property<int>("IDMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDMarca"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDMarca");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("TecnoService.Core.Models.Persona", b =>
                {
                    b.Property<int>("IDPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDPersona"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDPersona");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("TecnoService.Core.Models.Trabajador", b =>
                {
                    b.Property<int>("IDTrabajador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDTrabajador"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDPersona")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDTrabajador");

                    b.HasIndex("IDPersona")
                        .IsUnique();

                    b.ToTable("Trabajadores");
                });

            modelBuilder.Entity("TecnoService.Core.Models.Cliente", b =>
                {
                    b.HasOne("TecnoService.Core.Models.Persona", "Persona")
                        .WithOne("Cliente")
                        .HasForeignKey("TecnoService.Core.Models.Cliente", "IDPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("TecnoService.Core.Models.Dispositivo", b =>
                {
                    b.HasOne("TecnoService.Core.Models.Marca", "Marca")
                        .WithMany("Dispositivos")
                        .HasForeignKey("IDMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("TecnoService.Core.Models.Factura", b =>
                {
                    b.HasOne("TecnoService.Core.Models.InDis", "ingreso")
                        .WithOne("Factura")
                        .HasForeignKey("TecnoService.Core.Models.Factura", "IDInDis")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TecnoService.Core.Models.Trabajador", "Trabajador")
                        .WithMany("Facturas")
                        .HasForeignKey("IDTrabajador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trabajador");

                    b.Navigation("ingreso");
                });

            modelBuilder.Entity("TecnoService.Core.Models.InDis", b =>
                {
                    b.HasOne("TecnoService.Core.Models.Cliente", "Cliente")
                        .WithMany("Ingreso")
                        .HasForeignKey("IDCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TecnoService.Core.Models.Dispositivo", "Dispositivo")
                        .WithMany("Ingreso")
                        .HasForeignKey("IDDispositivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Dispositivo");
                });

            modelBuilder.Entity("TecnoService.Core.Models.Trabajador", b =>
                {
                    b.HasOne("TecnoService.Core.Models.Persona", "Persona")
                        .WithOne("Trabajador")
                        .HasForeignKey("TecnoService.Core.Models.Trabajador", "IDPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("TecnoService.Core.Models.Cliente", b =>
                {
                    b.Navigation("Ingreso");
                });

            modelBuilder.Entity("TecnoService.Core.Models.Dispositivo", b =>
                {
                    b.Navigation("Ingreso");
                });

            modelBuilder.Entity("TecnoService.Core.Models.InDis", b =>
                {
                    b.Navigation("Factura")
                        .IsRequired();
                });

            modelBuilder.Entity("TecnoService.Core.Models.Marca", b =>
                {
                    b.Navigation("Dispositivos");
                });

            modelBuilder.Entity("TecnoService.Core.Models.Persona", b =>
                {
                    b.Navigation("Cliente")
                        .IsRequired();

                    b.Navigation("Trabajador")
                        .IsRequired();
                });

            modelBuilder.Entity("TecnoService.Core.Models.Trabajador", b =>
                {
                    b.Navigation("Facturas");
                });
#pragma warning restore 612, 618
        }
    }
}
